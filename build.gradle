plugins {
    id "fabric-loom" version "0.9-SNAPSHOT"
    id "maven-publish"
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id "com.modrinth.minotaur" version "1.2.1"
    id "org.jetbrains.changelog" version "1.3.1"
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

var modVersion = project.version.split("\\+")[0]

repositories {
    maven {
        url = uri("https://storage.googleapis.com/devan-maven/")
    }
    maven {
        name = "stashymane's repo"
        url = "https://repo.stashy.dev"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
    modImplementation include("net.devtech:arrp:0.5.1")
    modImplementation include("dev.stashy:sound-categories:${project.soundcategories_version}")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"

    def targetVersion = 16
    if (JavaVersion.current().isJava9Compatible()) {
        it.options.release = targetVersion
    }
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
        maven {
            url = "https://repo.stashy.dev"
            credentials {
                username = project.hasProperty("publish_username") ? project.publish_username : ""
                password = project.hasProperty("publish_password") ? project.publish_password : ""
            }
        }
    }
}

changelog {
    version = modVersion
}

curseforge {
    apiKey = System.getenv("CURSE_API_KEY") ?: ""
    project {
        id = "478890"
        changelog = project.changelog.getLatest().toHTML()
        changelogType = "html"
        releaseType = "release"
        addGameVersion project.minecraft_version

        mainArtifact(remapJar) {
            displayName = "$modVersion for $project.minecraft_version"

            relations {
                requiredDependency "fabric-api"
                embeddedLibrary "arrp"
                embeddedLibrary "sound-categories"
            }
        }
    }

    options {
        forgeGradleIntegration = false
        detectNewerJava = true
    }
}

import com.modrinth.minotaur.TaskModrinthUpload

task publishModrinth(type: TaskModrinthUpload) {
    onlyIf {
        System.getenv("MODRINTH_TOKEN")
    }

    token = System.getenv("MODRINTH_TOKEN")
    changelog = project.changelog.getLatest()
    projectId = "uPWCQrVL"
    versionNumber = version
    versionName = "$modVersion for $project.minecraft_version"
    uploadFile = remapJar
    addGameVersion(project.minecraft_version)
    addLoader("fabric")
    //addDependency("fabric-api", "required")
}

task publishMod() {
    dependsOn(tasks.publishModrinth)
    dependsOn(tasks.curseforge)
}